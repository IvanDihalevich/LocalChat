@using System.Security.Claims
@using LocalChat.Core.Entities
@model IEnumerable<LocalChat.Core.Entities.Message>

@{
    ViewData["Title"] = "Чат";
}

<style>
    body {
        overflow: hidden; /* Вимкнути прокрутку сторінки */
    }

    .message-container {
        display: flex;
        flex-direction: column;
        gap: 10px;
        max-height: calc(80vh - 130px); /* Фіксована висота контейнера (висота вікна мінус висота footer та верхнього заголовка) */
        overflow-y: auto; /* Додати прокрутку по вертикалі */
    }

    .message {
        border-radius: 10px;
        padding: 10px;
        background-color: #cceeff; /* блакитний колір фону повідомлень */
        max-width: 70%;
        align-self: flex-start; /* розташовуємо ліворуч */
    }

    .sent-by-user {
        align-self: flex-end; /* розташовуємо праворуч */
        background-color: #d9ead3; /* колір фону для повідомлень, відправлених користувачем */
    }

    .form-container {
        display: flex;
        align-items: center;
        padding: 10px;
        background-color: #f1f1f1;
        border-radius: 10px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    }

    .form-control {
        flex-grow: 1;
        margin-right: 10px;
    }

    .btn-warning {
        flex-shrink: 0;
    }
</style>

<h1>Чат</h1>

<!-- Button to add a new message -->
<a href="@Url.Action("Index", "ChatRoom")" class="btn btn-primary">Повернутись назад</a>

@if (Model == null || !Model.Any())
{
    <p>Немає повідомлень для відображення.</p>
}
else
{
    <div class="message-container" id="message-container">
        @foreach (var message in Model)
        {
            var currentUserId = Guid.Parse(User.FindFirst(ClaimTypes.NameIdentifier).Value);
            var isSentByCurrentUser = message.SenderId == currentUserId;
            var senderName = isSentByCurrentUser ? User.Identity.Name : message.Sender.Email;
            <div class="message @(isSentByCurrentUser ? "sent-by-user" : "")">
                <div class="message-sender">
                    <span>@senderName</span>
                </div>
                <div class="message-text">
                    @message.Text
                </div>
                <div>
                    <span>@message.SendTime ??</span>
                </div>
            </div>
        }
    </div>
}

<div class="form-container">
    <form asp-controller="Message" asp-action="Create" class="form-inline" style="width: 100%;">
        <input type="hidden" name="ChatRoomId" value="@ViewData["ChatRoomId"]" />
        <input type="hidden" name="SenderId" value="@User.FindFirst(ClaimTypes.NameIdentifier).Value" />
        @* <input type="text" disabled name="ChatRoomId" value="@ViewData["ChatRoomId"]" class="form-control" /> *@

        <input type="text" class="form-control" name="Text" placeholder="Введіть повідомлення..." />
        <button type="submit" class="btn btn-primary">Надіслати</button>
    </form>
</div>

<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>

<script>
    // Автоматическая прокрутка до последнего сообщения при загрузке страницы
    var messageContainer = document.getElementById("message-container");
    messageContainer.scrollTop = messageContainer.scrollHeight;

    function reload() {
        $.ajax({
            url: '@Url.Action("GetMessages", "Message", new { chatRoomId = ViewData["ChatRoomId"] })', // Убедитесь, что этот URL правильный
            type: 'GET',
            success: function (data) {
                // Обновляем контейнер сообщений
                $('#message-container').html(data);

                // Прокручиваем до последнего сообщения
                messageContainer.scrollTop = messageContainer.scrollHeight;
            },
            error: function (xhr, status, error) {
                console.error('Ошибка при загрузке сообщений:', error);
            }
        });
    }

    // Запускаем функцию reload каждые 3 секунды
    setInterval(reload, 1000);
</script>
