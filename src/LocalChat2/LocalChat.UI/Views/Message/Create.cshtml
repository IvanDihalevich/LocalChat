@model LocalChat.Core.Entities.Message
@using System.Security.Claims
@using LocalChat.Core.Entities;

@{
    ViewData["Title"] = "Додати повідомлення";
}

<h1>Додати повідомлення</h1>

<form asp-action="Create">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <input type="hidden" asp-for="ChatRoomId" />
    <div class="form-group">
        <label for="Text">Текст повідомлення:</label>
        <input type="text" class="form-control" asp-for="Text" />
    </div>

    <div class="form-group">
        <input type="hidden" asp-for="ChatRoomId" value="@ViewData["ChatRoomId"]" />
        <input type="hidden" asp-for="ChatRoom" value="@ViewData["ChatRoom"]" />
    </div>

    <div class="form-group">
        <input type="hidden" asp-for="SenderId" value="@User.FindFirst(ClaimTypes.NameIdentifier).Value" />
    </div>

    <button type="submit" class="btn btn-primary">Зберегти</button>

    <a href="@Url.Action("Index", "Message")" class="btn btn-secondary">Відмінити</a>
</form>

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/5.0.9/signalr.min.js"></script>
    <script type="text/javascript">
        const connection = new signalR.HubConnectionBuilder()
            .withUrl("/chathub")
            .build();

        connection.on("ReceiveMessage", function (senderId, message, chatRoomId) {
            if (chatRoomId === "@ViewData["ChatRoomId"]") {
                const msg = document.createElement("div");
                msg.textContent = `${senderId}: ${message}`;
                document.getElementById("messagesList").appendChild(msg);
            }
        });

        connection.start().then(function () {
            connection.invoke("JoinGroup", "@ViewData["ChatRoomId"]").catch(function (err) {
                return console.error(err.toString());
            });
        }).catch(function (err) {
            return console.error(err.toString());
        });
    </script>
}
