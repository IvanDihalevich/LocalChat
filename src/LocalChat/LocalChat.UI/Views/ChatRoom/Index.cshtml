@using LocalChat.Core.Entities;
@model List<ChatRoom>;
@{
    ViewData["Title"] = "Чат";
}

<!DOCTYPE html>
<html lang="uk">
<head>
    @foreach(var p in Model)
    {
        <tr>
            <td>@p.Name<br />
                @p.Id<br />
            </td>
        </tr>
    }
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"]</title>
    <style>
        #chat-container {
            width: 100%;
            height: 400px;
            border: 1px solid #ccc;
            overflow-y: scroll;
            padding: 10px;
        }

        .message {
            padding: 5px;
            margin: 5px 0;
            border-bottom: 1px solid #ccc;
        }

        #message-form {
            margin-top: 10px;
        }
    </style>
</head>
<body>
    <h1>Чат</h1>
    <div id="chat-container"></div> <!-- Контейнер для повідомлень -->

    <div id="message-form">
        <input type="text" id="message-input" placeholder="Введіть повідомлення" style="width: 70%">
        <button onclick="sendMessage()">Надіслати</button> <!-- Кнопка для надсилання -->
    </div>

    <script>
        // Завантаження попередніх повідомлень
        function loadMessages() {
            var xhr = new XMLHttpRequest();
            xhr.open("GET", "/api/chat/all", true); // Кінцева точка для отримання всіх повідомлень
            xhr.onreadystatechange = function () {
                if (xhr.readyState === 4 && xhr.status === 200) {
                    var messages = JSON.parse(xhr.responseText);
                    displayMessages(messages); // Відображення повідомлень у чаті
                }
            };
            xhr.send();
        }

        // Відображення повідомлень у чаті
        function displayMessages(messages) {
            var chatContainer = document.getElementById("chat-container");
            chatContainer.innerHTML = ""; // Очищення контейнера

            messages.forEach(function (msg) {
                var messageElement = document.createElement("div");
                messageElement.className = "message"; // Стиль для повідомлення
                var sender = msg.SenderId; // Ідентифікатор або ім'я користувача
                messageElement.textContent = `${sender}: ${msg.Text}`;
                chatContainer.appendChild(messageElement);
            });

            chatContainer.scrollTop = chatContainer.scrollHeight; // Прокрутка до низу
        }

        // Надсилання нового повідомлення
        function sendMessage() {
            var messageInput = document.getElementById("message-input");
            var message = messageInput.value;

            if (message.trim() === "") {
                alert("Введіть повідомлення!");
                return;
            }

            var xhr = new XMLHttpRequest();
            xhr.open("POST", "/api/chat/send", true); // Кінцева точка на сервері
            xhr.setRequestHeader("Content-Type", "application/json");

            var messageData = {
                Id: null,
                SenderId: "YOUR_USER_ID_HERE", // Замініть на фактичний ID користувача
                Text: message,
                SendTime: new Date().toISOString() // UTC час
            };

            xhr.onreadystatechange = function () {
                if (xhr.readyState === 4 && xhr.status === 200) {
                    console.log("Повідомлення надіслано.");
                    appendMessage("Ви:", message); // Додати повідомлення до чату
                    messageInput.value = ""; // Очистити поле
                }
            };

            xhr.send(JSON.stringify(messageData)); // Надіслати дані
        }

        function appendMessage(sender, message) {
            var chatContainer = document.getElementById("chat-container");
            var messageElement = document.createкт
            Element("div");
            messageElement.className = "message"; // Стиль для повідомлення
            messageElement.textContent = `${sender}: ${message}`;
            chatContainer.appendChild(messageElement);
            chatContainer.scrollTop = chatContainer.scrollHeight; // Прокрутка до низу
        }

        // Завантажити попередні повідомлення при завантаженні сторінки
        window.onload = function () {
            loadMessages(); // Завантажити всі повідомлення при завантаженні сторінки
        };
    </script>
</body>
</html>
